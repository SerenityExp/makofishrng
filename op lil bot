local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local SelectedMainAccount = nil
local Following = false
local Connection = nil
local Vanishing = false

-- Stop all ongoing actions before switching commands
local function StopAll()
    Following = false
    Vanishing = false
    if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
        LocalPlayer.Character.Humanoid.WalkSpeed = 16
        LocalPlayer.Character.Humanoid.JumpPower = 50
    end
    print("✅ Stopped all actions")
end

-- Floating movement function
local function ApplyFloatingMovement(character, targetOffset)
    local hrp = character:FindFirstChild("HumanoidRootPart")
    if not hrp then return end

    for _, obj in ipairs(hrp:GetChildren()) do
        if obj:IsA("AlignPosition") or obj:IsA("AlignOrientation") then
            obj:Destroy()
        end
    end

    local alignPos = Instance.new("AlignPosition", hrp)
    alignPos.MaxForce = 100000
    alignPos.Responsiveness = 100
    alignPos.RigidityEnabled = true
    alignPos.Parent = hrp

    local alignOri = Instance.new("AlignOrientation", hrp)
    alignOri.MaxTorque = 100000
    alignOri.Responsiveness = 100
    alignOri.RigidityEnabled = true
    alignOri.Parent = hrp

    local attachment0 = Instance.new("Attachment", hrp)
    local targetAttachment = Instance.new("Attachment")

    alignPos.Attachment0 = attachment0
    alignPos.Attachment1 = targetAttachment
    alignOri.Attachment0 = attachment0
    alignOri.Attachment1 = targetAttachment

    task.spawn(function()
        while Following and SelectedMainAccount and SelectedMainAccount.Character do
            local targetHRP = SelectedMainAccount.Character:FindFirstChild("HumanoidRootPart")
            if targetHRP then
                targetAttachment.Parent = targetHRP
                targetAttachment.Position = targetOffset
            end
            task.wait(0.1)
        end

        alignPos:Destroy()
        alignOri:Destroy()
        targetAttachment:Destroy()
        attachment0:Destroy()
    end)
end

-- Summon Alt
local function SummonAlt()
    StopAll()
    if not SelectedMainAccount or not SelectedMainAccount.Character then
        warn("⚠️ Summon failed: No main account selected")
        return
    end

    local AltChar = LocalPlayer.Character
    if not AltChar then return end

    Following = true
    print("✅ Summoning Alt to the side...")

    AltChar.Humanoid.WalkSpeed = 0
    AltChar.Humanoid.JumpPower = 0

    ApplyFloatingMovement(AltChar, Vector3.new(7, 10, 0))
end

-- Vanish Alt
local function VanishAlt()
    StopAll()
    if not SelectedMainAccount or not SelectedMainAccount.Character then
        warn("⚠️ Vanish failed: No main account selected")
        return
    end

    local AltChar = LocalPlayer.Character
    if not AltChar then return end

    Following = true
    Vanishing = true
    print("✅ Vanishing Alt underground...")

    AltChar.Humanoid.WalkSpeed = 0
    AltChar.Humanoid.JumpPower = 0

    task.spawn(function()
        while Vanishing do
            ApplyFloatingMovement(AltChar, Vector3.new(0, -25, 0))
            task.wait(1)
        end
    end)
end

-- Teleport Alt to Main Instantly
local function TeleportAlt()
    if not SelectedMainAccount or not SelectedMainAccount.Character then
        warn("⚠️ Teleport failed: No main account selected")
        return
    end

    local AltChar = LocalPlayer.Character
    local MainChar = SelectedMainAccount.Character
    if not AltChar or not MainChar then return end

    local MainHRP = MainChar:FindFirstChild("HumanoidRootPart")
    local AltHRP = AltChar:FindFirstChild("HumanoidRootPart")

    if MainHRP and AltHRP then
        AltHRP.CFrame = MainHRP.CFrame + Vector3.new(0, 5, 0)
        print("✅ Teleported Alt to Main!")
    else
        warn("⚠️ Teleport failed: Missing parts")
    end
end

-- Command Handling
local function HandleChatCommand(message)
    if message == ".summon" then
        SummonAlt()
    elseif message == ".vanish" then
        VanishAlt()
    elseif message == ".tp" then
        TeleportAlt()
    elseif message == ".stop" then
        StopAll()
    else
        warn("⚠️ Unknown command:", message)
    end
end

-- UI Selection (Now horizontal at bottom)
local function SetupSelectionUI()
    local ScreenGui = Instance.new("ScreenGui", game.CoreGui)
    local Frame = Instance.new("Frame", ScreenGui)
    Frame.Size = UDim2.new(1, 0, 0, 50) -- Full width, 50px height
    Frame.Position = UDim2.new(0, 0, 1, -50) -- Anchored to bottom
    Frame.BackgroundColor3 = Color3.new(0.1, 0.1, 0.1)

    local UIList = Instance.new("UIListLayout", Frame)
    UIList.FillDirection = Enum.FillDirection.Horizontal -- Horizontal Layout
    UIList.Padding = UDim.new(0, 5)

    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then
            local Button = Instance.new("TextButton", Frame)
            Button.Size = UDim2.new(0, 150, 1, 0) -- 150px width, full height
            Button.Text = player.Name
            Button.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2)
            Button.TextColor3 = Color3.new(1, 1, 1)
            Button.Font = Enum.Font.SourceSansBold
            Button.TextScaled = true

            Button.MouseButton1Click:Connect(function()
                SelectedMainAccount = player
                print("✅ Main Account Selected: " .. player.Name)
            end)
        end
    end
end

SetupSelectionUI()

