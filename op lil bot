local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local SelectedMainAccount = nil
local Following = false
local Connection = nil
local Vanishing = false

-- Stop all ongoing actions before switching commands
local function StopAll()
    Following = false
    Vanishing = false
    if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
        LocalPlayer.Character.Humanoid.WalkSpeed = 16
        LocalPlayer.Character.Humanoid.JumpPower = 50
    end
    print("‚úÖ Stopped all actions")
end

-- Disable collisions
local function SetCollisions(character, state)
    for _, part in ipairs(character:GetDescendants()) do
        if part:IsA("BasePart") then
            part.CanCollide = state
            part.CanTouch = state
        end
    end
end

-- Floating movement function
local function ApplyFloatingMovement(character, targetOffset)
    local hrp = character:FindFirstChild("HumanoidRootPart")
    if not hrp then return end

    for _, obj in ipairs(hrp:GetChildren()) do
        if obj:IsA("AlignPosition") or obj:IsA("AlignOrientation") then
            obj:Destroy()
        end
    end

    local alignPos = Instance.new("AlignPosition")
    alignPos.MaxForce = 100000
    alignPos.Responsiveness = 100
    alignPos.RigidityEnabled = true
    alignPos.Parent = hrp

    local alignOri = Instance.new("AlignOrientation")
    alignOri.MaxTorque = 100000
    alignOri.Responsiveness = 100
    alignOri.RigidityEnabled = true
    alignOri.Parent = hrp

    local attachment0 = Instance.new("Attachment", hrp)
    local targetAttachment = Instance.new("Attachment")

    alignPos.Attachment0 = attachment0
    alignPos.Attachment1 = targetAttachment
    alignOri.Attachment0 = attachment0
    alignOri.Attachment1 = targetAttachment

    task.spawn(function()
        while Following and SelectedMainAccount and SelectedMainAccount.Character do
            local targetHRP = SelectedMainAccount.Character:FindFirstChild("HumanoidRootPart")
            if targetHRP then
                targetAttachment.Parent = targetHRP
                targetAttachment.Position = targetOffset
            end
            task.wait(0.1)
        end

        alignPos:Destroy()
        alignOri:Destroy()
        targetAttachment:Destroy()
        attachment0:Destroy()
    end)
end

-- Summon Alt
local function SummonAlt()
    StopAll()
    if not SelectedMainAccount or not SelectedMainAccount.Character then
        warn("‚ö†Ô∏è Summon failed: No main account selected")
        return
    end

    local MainChar = SelectedMainAccount.Character
    local AltChar = LocalPlayer.Character
    if not MainChar or not AltChar then return end

    Following = true
    print("‚úÖ Summoning Alt to the side...")

    AltChar.Humanoid.WalkSpeed = 0
    AltChar.Humanoid.JumpPower = 0

    ApplyFloatingMovement(AltChar, Vector3.new(7, 10, 0))
end

-- Shotgun Alt (Now resets after firing)
local function ShotgunAlt()
    StopAll()
    if not SelectedMainAccount or not SelectedMainAccount.Character then
        warn("‚ö†Ô∏è Shotgun failed: No main account selected")
        return
    end

    local AltChar = LocalPlayer.Character
    local MainChar = SelectedMainAccount.Character
    if not AltChar or not MainChar then return end

    local MainHRP = MainChar:FindFirstChild("HumanoidRootPart")
    local AltHRP = AltChar:FindFirstChild("HumanoidRootPart")
    local RightArm = MainChar:FindFirstChild("Right Arm") or MainChar:FindFirstChild("RightHand")

    if not MainHRP or not AltHRP or not RightArm then
        warn("‚ö†Ô∏è Shotgun failed: Missing required parts")
        return
    end

    print("‚úÖ Alt moving to arm for Shotgun...")

    local AlignPos = Instance.new("AlignPosition", AltHRP)
    AlignPos.MaxForce = 100000
    AlignPos.Responsiveness = 100
    AlignPos.Attachment0 = Instance.new("Attachment", AltHRP)
    AlignPos.Attachment1 = Instance.new("Attachment", RightArm)

    task.wait(2)

    print("üöÄ Shotgun firing!")
    AlignPos:Destroy()

    local BodyVelocity = Instance.new("BodyVelocity", AltHRP)
    BodyVelocity.Velocity = MainHRP.CFrame.LookVector * 250
    BodyVelocity.MaxForce = Vector3.new(100000, 100000, 100000)

    task.wait(0.5)
    BodyVelocity:Destroy()

    task.wait(1)
    LocalPlayer.Character:BreakJoints() -- Reset after firing
end

-- Vanish Alt
local function VanishAlt()
    StopAll()
    if not SelectedMainAccount or not SelectedMainAccount.Character then
        warn("‚ö†Ô∏è Vanish failed: No main account selected")
        return
    end

    local AltChar = LocalPlayer.Character
    if not AltChar then return end

    Following = true
    Vanishing = true
    print("‚úÖ Vanishing Alt underground...")

    AltChar.Humanoid.WalkSpeed = 0
    AltChar.Humanoid.JumpPower = 0
    SetCollisions(AltChar, false)

    task.spawn(function()
        while Vanishing do
            ApplyFloatingMovement(AltChar, Vector3.new(0, -25, 0))
            task.wait(1)
        end
        SetCollisions(AltChar, true)
    end)
end

-- Teleport Alt to Main Instantly
local function TeleportAlt()
    if not SelectedMainAccount or not SelectedMainAccount.Character then
        warn("‚ö†Ô∏è Teleport failed: No main account selected")
        return
    end

    local AltChar = LocalPlayer.Character
    local MainChar = SelectedMainAccount.Character
    if not AltChar or not MainChar then return end

    local MainHRP = MainChar:FindFirstChild("HumanoidRootPart")
    local AltHRP = AltChar:FindFirstChild("HumanoidRootPart")

    if MainHRP and AltHRP then
        AltHRP.CFrame = MainHRP.CFrame + Vector3.new(0, 5, 0)
        print("‚úÖ Teleported Alt to Main!")
    else
        warn("‚ö†Ô∏è Teleport failed: Missing parts")
    end
end

-- Command Handling
local function HandleChatCommand(message)
    if message == ".summon" then
        SummonAlt()
    elseif message == ".shotgun" then
        ShotgunAlt()
    elseif message == ".vanish" then
        VanishAlt()
    elseif message == ".tp" then
        TeleportAlt()
    elseif message == ".stop" then
        StopAll()
    else
        warn("‚ö†Ô∏è Unknown command:", message)
    end
end

-- UI Selection (Now smaller & scrollable)
local function SetupSelectionUI()
    local ScreenGui = Instance.new("ScreenGui", game.CoreGui)
    local Frame = Instance.new("Frame", ScreenGui)
    Frame.Size = UDim2.new(0, 200, 0, 200) -- Smaller
    Frame.Position = UDim2.new(0, 10, 0, 10)
    Frame.BackgroundColor3 = Color3.new(0.1, 0.1, 0.1)
    Frame.ClipsDescendants = true 

    local ScrollingFrame = Instance.new("ScrollingFrame", Frame)
    ScrollingFrame.Size = UDim2.new(1, 0, 1, 0)
    ScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, #Players:GetPlayers() * 35)
    ScrollingFrame.ScrollBarThickness = 6
    ScrollingFrame.BackgroundTransparency = 1

    local UIList = Instance.new("UIListLayout", ScrollingFrame)
    UIList.Padding = UDim.new(0, 5)

    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then
            local Button = Instance.new("TextButton", ScrollingFrame)
            Button.Size = UDim2.new(1, 0, 0, 30)
            Button.Text = player.Name
            Button.MouseButton1Click:Connect(function()
                SelectedMainAccount = player
                print("‚úÖ Main Account Selected: " .. player.Name)
            end)
        end
    end
end

SetupSelectionUI()
