-- Place this script inside a LocalScript in StarterGui

-- GUI Setup
local player = game.Players.LocalPlayer
local screenGui = Instance.new("ScreenGui")
screenGui.Parent = player:WaitForChild("PlayerGui")

-- Main Frame Setup
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 400, 0, 200)
mainFrame.Position = UDim2.new(0.5, -200, 0.5, -100)
mainFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40) -- Dark grey color for background
mainFrame.Parent = screenGui
mainFrame.BorderSizePixel = 0

-- Add a smooth, animated background (fading colors)
local background = Instance.new("Frame")
background.Size = UDim2.new(1, 0, 1, 0)
background.Position = UDim2.new(0, 0, 0, 0)
background.BackgroundColor3 = Color3.fromRGB(20, 20, 20) -- Super dark grey
background.Parent = mainFrame

-- TweenService for smooth animations
local TweenService = game:GetService("TweenService")
local frameTweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut, -1, true)

-- Create a background color fading effect (subtle color shift)
local colorTween = TweenService:Create(background, frameTweenInfo, {
    BackgroundColor3 = Color3.fromRGB(10, 10, 10) -- Subtle shift to black
})
colorTween:Play()

-- Add a separator line that will remain visible
local separatorLine = Instance.new("Frame")
separatorLine.Size = UDim2.new(1, 0, 0, 2) -- Thin line separating the header
separatorLine.Position = UDim2.new(0, 0, 0, 40) -- Line position after the title bar
separatorLine.BackgroundColor3 = Color3.fromRGB(100, 100, 100) -- Light grey color for the separator
separatorLine.Parent = mainFrame

-- Label on the Bar that says "Mako V2"
local titleLabel = Instance.new("TextLabel")
titleLabel.Size = UDim2.new(0, 200, 0, 30)
titleLabel.Position = UDim2.new(0, 5, 0, 5)
titleLabel.Text = "Mako V2"
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
titleLabel.BackgroundTransparency = 1
titleLabel.TextScaled = true
titleLabel.Parent = mainFrame

-- Minimize Button Setup
local minimizeButton = Instance.new("TextButton")
minimizeButton.Size = UDim2.new(0, 30, 0, 30)
minimizeButton.Position = UDim2.new(1, -35, 0, 5)
minimizeButton.Text = "-"
minimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
minimizeButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
minimizeButton.TextScaled = true
minimizeButton.Parent = mainFrame

-- Teleport Button Setup ("Annoy All")
local teleportButton = Instance.new("TextButton")
teleportButton.Size = UDim2.new(0, 120, 0, 30) -- Smaller size for "Annoy All"
teleportButton.Position = UDim2.new(0, 10, 0.5, -15) -- Position at the left corner
teleportButton.Text = "Annoy All"
teleportButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
teleportButton.TextColor3 = Color3.fromRGB(255, 255, 255)
teleportButton.TextScaled = true
teleportButton.Parent = mainFrame

-- Draggable GUI Logic
local dragging = false
local dragInput, dragStart, startPos

-- Function to start dragging
local function onDragStart(input)
    dragging = true
    dragStart = input.Position
    startPos = mainFrame.Position
end

-- Function to update the position while dragging
local function onDragMove(input)
    if dragging then
        local delta = input.Position - dragStart
        mainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end

-- Function to stop dragging
local function onDragEnd()
    dragging = false
end

-- Connect the dragging functions to the GUI frame
mainFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        onDragStart(input)
    end
end)

mainFrame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        onDragMove(input)
    end
end)

mainFrame.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        onDragEnd()
    end
end)

-- Function to handle Minimize and Restore actions
local isMinimized = false
local function toggleMinimize()
    if isMinimized then
        -- Restore the frame size and minimize button position
        TweenService:Create(mainFrame, TweenInfo.new(0.3), {Size = UDim2.new(0, 400, 0, 200)}):Play()
        minimizeButton.Text = "-"
        
        -- Make teleport button and other content visible
        teleportButton.Visible = true
    else
        -- Minimize the frame size and hide the content
        TweenService:Create(mainFrame, TweenInfo.new(0.3), {Size = UDim2.new(0, 400, 0, 50)}):Play()
        minimizeButton.Text = "+"
        
        -- Hide teleport button
        teleportButton.Visible = false
    end
    isMinimized = not isMinimized
end

-- Minimize Button Functionality
minimizeButton.MouseButton1Click:Connect(toggleMinimize)

-- Smooth Button Animations for Hover
local buttonHoverIn = TweenService:Create(teleportButton, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(0, 255, 0)})
local buttonHoverOut = TweenService:Create(teleportButton, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(0, 0, 0)})

-- Button hover effects
teleportButton.MouseEnter:Connect(function()
    buttonHoverIn:Play()
end)

teleportButton.MouseLeave:Connect(function()
    buttonHoverOut:Play()
end)

-- Function to teleport the player (Teleportation Logic)
local function teleportToMousePosition()
    local character = player.Character or player.CharacterAdded:Wait()
    local mousePosition = player:GetMouse().Hit.Position
    
    -- Teleport the player to the mouse position
    character:SetPrimaryPartCFrame(CFrame.new(mousePosition))
end

-- Teleportation Logic when Control is held
local UserInputService = game:GetService("UserInputService")

UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end

    -- Check if Control key is held and if MouseButton1 (Left Click) is pressed
    if input.UserInputType == Enum.UserInputType.MouseButton1 and UserInputService:IsKeyDown(Enum.KeyCode.LeftControl) then
        teleportToMousePosition()
    end
end)

-- Function to teleport the player to another player's position (Annoy All Logic)
local function teleportToPlayer(targetPlayer)
    local character = player.Character or player.CharacterAdded:Wait()
    local targetCharacter = targetPlayer.Character or targetPlayer.CharacterAdded:Wait()
    
    -- Teleport the player to the target's position
    character:SetPrimaryPartCFrame(targetCharacter.PrimaryPart.CFrame)
end

-- Teleportation Logic
local teleporting = false
local playersList = {}

-- Function to start the teleporting process (Annoy All)
local function startTeleporting()
    teleporting = true
    teleportButton.Text = "Stop Teleporting"
    
    -- Get all players in the server sorted by leaderboard position (top to bottom)
    playersList = {}
    for _, otherPlayer in pairs(game.Players:GetPlayers()) do
        if otherPlayer ~= player then
            table.insert(playersList, otherPlayer)
        end
    end
    table.sort(playersList, function(a, b)
        local aScore = a:FindFirstChild("leaderstats") and a.leaderstats:FindFirstChild("Score") and a.leaderstats.Score.Value or 0
        local bScore = b:FindFirstChild("leaderstats") and b.leaderstats:FindFirstChild("Score") and b.leaderstats.Score.Value or 0
        return aScore > bScore
    end)
    
    -- Teleport every 0.1 seconds to a new player, dynamically updating as players join/leave
    while teleporting do
        for _, targetPlayer in ipairs(playersList) do
            if targetPlayer.Character then
                teleportToPlayer(targetPlayer)
            end
            wait(0.3)
        end

        -- Rebuild the player list dynamically on each loop to handle join/leave
        playersList = {}
        for _, otherPlayer in pairs(game.Players:GetPlayers()) do
            if otherPlayer ~= player then
                table.insert(playersList, otherPlayer)
            end
        end
        table.sort(playersList, function(a, b)
            local aScore = a:FindFirstChild("leaderstats") and a.leaderstats:FindFirstChild("Score") and a.leaderstats.Score.Value or 0
            local bScore = b:FindFirstChild("leaderstats") and b.leaderstats:FindFirstChild("Score") and b.leaderstats.Score.Value or 0
            return aScore > bScore
        end)
    end
end

-- Function to stop the teleporting
local function stopTeleporting()
    teleporting = false
    teleportButton.Text = "Annoy All"
end

-- Button click handling
teleportButton.MouseButton1Click:Connect(function()
    if teleporting then
        stopTeleporting()
    else
        startTeleporting()
    end
end)
