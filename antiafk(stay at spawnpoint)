local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

-- GUI Setup
local screenGui = Instance.new("ScreenGui")
screenGui.Parent = player.PlayerGui
screenGui.DisplayOrder = 10 -- Ensure it covers other GUIs

-- Loading Screen Container
local loadingFrame = Instance.new("Frame")
loadingFrame.Size = UDim2.new(1, 0, 1, 0)
loadingFrame.BackgroundColor3 = Color3.new(0, 0, 0)
loadingFrame.BackgroundTransparency = 0.5
loadingFrame.BorderSizePixel = 0
loadingFrame.Parent = screenGui

-- Loading Text
local loadingText = Instance.new("TextLabel")
loadingText.Size = UDim2.new(0, 300, 0, 50)
loadingText.Position = UDim2.new(0.5, -150, 0.4, -25)
loadingText.Text = "Initializing System..."
loadingText.TextColor3 = Color3.new(1, 1, 1)
loadingText.Font = Enum.Font.SciFi
loadingText.TextSize = 24
loadingText.BackgroundTransparency = 1
loadingText.Parent = loadingFrame

-- Progress Bar Background
local progressBarBackground = Instance.new("Frame")
progressBarBackground.Size = UDim2.new(0, 400, 0, 20)
progressBarBackground.Position = UDim2.new(0.5, -200, 0.5, -10)
progressBarBackground.BackgroundColor3 = Color3.new(0.1, 0.1, 0.1)
progressBarBackground.BorderSizePixel = 0
progressBarBackground.Parent = loadingFrame

-- Progress Bar Fill
local progressBarFill = Instance.new("Frame")
progressBarFill.Size = UDim2.new(0, 0, 1, 0)
progressBarFill.Position = UDim2.new(0, 0, 0, 0)
progressBarFill.BackgroundColor3 = Color3.new(0, 0.8, 1)
progressBarFill.BorderSizePixel = 0
progressBarFill.Parent = progressBarBackground

-- Glow Effect for Progress Bar
local glow = Instance.new("ImageLabel")
glow.Size = UDim2.new(1, 0, 1, 0)
glow.Position = UDim2.new(0, 0, 0, 0)
glow.BackgroundTransparency = 1
glow.Image = "rbxassetid://48965808" -- Replace with a glow texture ID
glow.ScaleType = Enum.ScaleType.Slice
glow.SliceCenter = Rect.new(10, 10, 118, 118)
glow.ImageColor3 = Color3.new(0, 0.8, 1)
glow.ImageTransparency = 0.5
glow.Parent = progressBarFill

-- Animate the Loading Screen
local function animateLoadingScreen()
    -- Animate the progress bar
    local tweenInfo = TweenInfo.new(3, Enum.EasingStyle.Linear)
    local tween = TweenService:Create(progressBarFill, tweenInfo, {Size = UDim2.new(1, 0, 1, 0)})
    tween:Play()

    -- Update loading text
    wait(1)
    loadingText.Text = "Loading Assets..."
    wait(1)
    loadingText.Text = "Calibrating System..."
    wait(1)
    loadingText.Text = "Loading Complete!"

    -- Fade out the loading screen
    local fadeTween = TweenService:Create(loadingFrame, TweenInfo.new(1), {BackgroundTransparency = 1})
    fadeTween:Play()
    fadeTween.Completed:Wait()
    loadingFrame:Destroy()
end

-- Start the loading screen animation
animateLoadingScreen()

-- Button Setup (after loading screen)
local antiAFKButton = Instance.new("TextButton")
antiAFKButton.Size = UDim2.new(0, 200, 0, 50)
antiAFKButton.Position = UDim2.new(0.5, -220, 0.1, 0)
antiAFKButton.Text = "Toggle Anti-AFK"
antiAFKButton.BackgroundColor3 = Color3.new(0.2, 0.2, 0.8)
antiAFKButton.TextColor3 = Color3.new(1, 1, 1)
antiAFKButton.Font = Enum.Font.SciFi
antiAFKButton.TextSize = 18
antiAFKButton.Parent = screenGui

local autoClickButton = Instance.new("TextButton")
autoClickButton.Size = UDim2.new(0, 200, 0, 50)
autoClickButton.Position = UDim2.new(0.5, 20, 0.1, 0)
autoClickButton.Text = "Clicking: Off"
autoClickButton.BackgroundColor3 = Color3.new(0.2, 0.2, 0.8)
autoClickButton.TextColor3 = Color3.new(1, 1, 1)
autoClickButton.Font = Enum.Font.SciFi
autoClickButton.TextSize = 18
autoClickButton.Parent = screenGui

-- Animation Setup for Buttons
local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut, -1, true)
local antiAFKTween = TweenService:Create(antiAFKButton, tweenInfo, {Rotation = 5})
antiAFKTween:Play()
local autoClickTween = TweenService:Create(autoClickButton, tweenInfo, {Rotation = 5})
autoClickTween:Play()

-- Area Setup
local areaSize = 100 -- Increased area size
local spawnPoint = character:WaitForChild("HumanoidRootPart").Position
local areaPart = Instance.new("Part")
areaPart.Size = Vector3.new(areaSize, 1, areaSize)
areaPart.Position = Vector3.new(spawnPoint.X, spawnPoint.Y - 0.5, spawnPoint.Z) -- Same height as spawn point
areaPart.Anchored = true
areaPart.Transparency = 0.7
areaPart.Color = Color3.new(0.5, 0, 0.5)
areaPart.CanCollide = false -- No collisions
areaPart.Parent = workspace

local walking = false
local clicking = false
local antiAFKCooldown = false
local autoClickCooldown = false

-- Random Walk Function
local function randomWalk()
    while walking do
        -- Calculate a random position within the area at the same height as the spawn point
        local randomX = spawnPoint.X + math.random(-areaSize/2, areaSize/2)
        local randomZ = spawnPoint.Z + math.random(-areaSize/2, areaSize/2)
        local targetPosition = Vector3.new(randomX, spawnPoint.Y, randomZ)

        -- Move the character to the target position
        humanoid:MoveTo(targetPosition)

        -- Wait until the character reaches the target position or a timeout occurs
        local reached = false
        local startTime = tick()
        while not reached and tick() - startTime < 5 do -- 5-second timeout
            local distance = (humanoid.RootPart.Position - targetPosition).Magnitude
            if distance < 2 then -- Close enough to the target
                reached = true
            end
            RunService.Heartbeat:Wait()
        end
    end
end

-- Auto-Click Function
local function autoClick()
    while clicking do
        mouse1click() -- Simulate a genuine mouse click
        wait(5) -- Click every 5 seconds
    end
end

-- Notification Function
local function sendNotification(message)
    local notification = Instance.new("Frame")
    notification.Size = UDim2.new(0, 300, 0, 80)
    notification.Position = UDim2.new(0.5, -150, 0.8, -40)
    notification.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2)
    notification.BorderSizePixel = 0
    notification.Parent = screenGui

    local textLabel = Instance.new("TextLabel")
    textLabel.Size = UDim2.new(1, 0, 1, 0)
    textLabel.Text = message
    textLabel.TextColor3 = Color3.new(1, 1, 1)
    textLabel.Font = Enum.Font.SciFi
    textLabel.TextSize = 18
    textLabel.BackgroundTransparency = 1
    textLabel.Parent = notification

    -- Fade out the notification
    wait(2)
    local fadeTween = TweenService:Create(notification, TweenInfo.new(1), {BackgroundTransparency = 1})
    fadeTween:Play()
    fadeTween.Completed:Wait()
    notification:Destroy()
end

-- Anti-AFK Button Click Event
antiAFKButton.MouseButton1Click:Connect(function()
    if not antiAFKCooldown then
        walking = not walking
        antiAFKCooldown = true
        antiAFKButton.BackgroundTransparency = 0.5
        antiAFKButton.TextColor3 = Color3.new(0.5, 0.5, 0.5)
        if walking then
            antiAFKButton.Text = "Anti-AFK Active"
            spawn(function()
                randomWalk()
            end)
            areaPart.Transparency = 0.3 -- Make the area more visible
        else
            antiAFKButton.Text = "Toggle Anti-AFK"
            areaPart.Transparency = 0.7 -- Make the area less visible
        end
        wait(3)
        antiAFKCooldown = false
        antiAFKButton.BackgroundTransparency = 0
        antiAFKButton.TextColor3 = Color3.new(1, 1, 1)
    end
end)

-- Auto-Click Button Click Event
autoClickButton.MouseButton1Click:Connect(function()
    if not autoClickCooldown then
        clicking = not clicking
        autoClickCooldown = true
        autoClickButton.BackgroundTransparency = 0.5
        autoClickButton.TextColor3 = Color3.new(0.5, 0.5, 0.5)
        if clicking then
            autoClickButton.Text = "Clicking: On"
            spawn(function()
                autoClick()
            end)
            sendNotification("Auto-Click Enabled!")
        else
            autoClickButton.Text = "Clicking: Off"
            sendNotification("Auto-Click Disabled!")
        end
        wait(3)
        autoClickCooldown = false
        autoClickButton.BackgroundTransparency = 0
        autoClickButton.TextColor3 = Color3.new(1, 1, 1)
    end
end)
